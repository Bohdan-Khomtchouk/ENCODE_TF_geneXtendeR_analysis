
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(geneXtendeR)
Loading required package: rtracklayer
Loading required package: GenomicRanges
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, cbind, colnames, do.call,
    duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect,
    is.unsorted, lapply, lengths, Map, mapply, match, mget, order,
    paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind,
    Reduce, rownames, sapply, setdiff, sort, table, tapply, union,
    unique, unsplit

Loading required package: S4Vectors
Loading required package: stats4

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    colMeans, colSums, expand.grid, rowMeans, rowSums

Loading required package: IRanges
Loading required package: GenomeInfoDb
Warning messages:
1: replacing previous import ‘data.table::between’ by ‘dplyr::between’ when loading ‘geneXtendeR’ 
2: replacing previous import ‘data.table::last’ by ‘dplyr::last’ when loading ‘geneXtendeR’ 
> human<-readGFF("/hihg/smoke/dvanbooven/extender/round2/blocks/gencode.v19.annotation.gtf")
> 
> peaksInput("BDP1.HeLa-S3.bed")
> png("BDP1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("BRCA1.HeLa-S3.bed")
> png("BRCA1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("BRF1.HeLa-S3.bed")
> png("BRF1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("BRF2.HeLa-S3.bed")
> png("BRF2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("CEBPB.HeLa-S3.bed")
> png("CEBPB.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("CHD2.HeLa-S3.bed")
> png("CHD2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("CTCF.HeLa-S3.bed")
> png("CTCF.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("E2F1.HeLa-S3.bed")
> png("E2F1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("E2F4.HeLa-S3.bed")
> png("E2F4.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("E2F6.HeLa-S3.bed")
> png("E2F6.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("ELK1.HeLa-S3.bed")
> png("ELK1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("ELK4.HeLa-S3.bed")
> png("ELK4.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("EP300.HeLa-S3.bed")
> png("EP300.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("EZH2.HeLa-S3.bed")
> png("EZH2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("FAM48A.HeLa-S3.bed")
> png("FAM48A.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("FOS.HeLa-S3.bed")
> png("FOS.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("GABPB1.HeLa-S3.bed")
> png("GABPB1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("GTF2B.HeLa-S3.bed")
> png("GTF2B.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("GTF2F1.HeLa-S3.bed")
> png("GTF2F1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("IRF3.HeLa-S3.bed")
> png("IRF3.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("JUND.HeLa-S3.bed")
> png("JUND.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("JUN.HeLa-S3.bed")
> png("JUN.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("KAT2A.HeLa-S3.bed")
> png("KAT2A.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("MAFK.HeLa-S3.bed")
> png("MAFK.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("MAX.HeLa-S3.bed")
> png("MAX.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("MAZ.HeLa-S3.bed")
> png("MAZ.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("MXI1.HeLa-S3.bed")
> png("MXI1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("MYC.HeLa-S3.bed")
> png("MYC.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("NFYA.HeLa-S3.bed")
> png("NFYA.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("NFYB.HeLa-S3.bed")
> png("NFYB.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("NR2C2.HeLa-S3.bed")
> png("NR2C2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("NRF1.HeLa-S3.bed")
> png("NRF1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("POLR2A.HeLa-S3.bed")
> png("POLR2A.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("POLR3A.HeLa-S3.bed")
> png("POLR3A.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("PRDM1.HeLa-S3.bed")
> png("PRDM1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("RAD21.HeLa-S3.bed")
> png("RAD21.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("RCOR1.HeLa-S3.bed")
> png("RCOR1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("REST.HeLa-S3.bed")
> png("REST.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("RFX5.HeLa-S3.bed")
> png("RFX5.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("SMARCA4.HeLa-S3.bed")
> png("SMARCA4.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("SMARCB1.HeLa-S3.bed")
> png("SMARCB1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("SMARCC1.HeLa-S3.bed")
> png("SMARCC1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("SMARCC2.HeLa-S3.bed")
> png("SMARCC2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("SMC3.HeLa-S3.bed")
> png("SMC3.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("STAT1.HeLa-S3.bed")
> png("STAT1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("STAT3.HeLa-S3.bed")
> png("STAT3.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("TAF1.HeLa-S3.bed")
> png("TAF1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("TBP.HeLa-S3.bed")
> png("TBP.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("TCF7L2.HeLa-S3.bed")
> png("TCF7L2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("TFAP2A.HeLa-S3.bed")
> png("TFAP2A.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("TFAP2C.HeLa-S3.bed")
> png("TFAP2C.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("USF2.HeLa-S3.bed")
> png("USF2.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("ZKSCAN1.HeLa-S3.bed")
> png("ZKSCAN1.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("ZNF143.HeLa-S3.bed")
> png("ZNF143.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("ZNF274.HeLa-S3.bed")
> png("ZNF274.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> peaksInput("ZZZ3.HeLa-S3.bed")
> png("ZZZ3.HeLa-S3.png")
> linePlot(human, 0, 10000, 500)
> dev.off()
null device 
          1 
> 
> proc.time()
    user   system  elapsed 
1046.103    5.572 1072.356 
